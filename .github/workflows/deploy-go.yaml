name: Deploy Go

on:
  push:
    branches:
      - master
    paths:
      - "go/**"
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Enter the directory name under go/ to build and push'
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      base_path: ${{ steps.set_path.outputs.base_path }}
      release_name: ${{ steps.set_project_name.outputs.release_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set path
        id: set_path
        run: |
          echo "base_path=go" >> $GITHUB_OUTPUT

      - name: Set Project Name
        id: set_project_name
        run: |
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            release_name=$(git diff --name-only HEAD^ HEAD | grep '^go/' | cut -d '/' -f 2 | uniq)
          else
            release_name="${{ github.event.inputs.release_name }}"
          fi
          echo "release_name=$release_name" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if resurce exists
        run: |
          echo "Checking if resource exists for directory: $base_path/$release_name/resource"
          echo "resource_exists=false" >> $GITHUB_OUTPUT
          if [ -d $base_path/$release_name/resource ]; then
            echo "resource_exists=true" >> $GITHUB_OUTPUT
          fi
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          release_name: ${{ needs.setup.outputs.release_name }}
        id: check
      
      - name: Build Frontend
        if: steps.check.outputs.resource_exists == 'true'
        run: |
          echo "Building frontend for directory: $base_path/$release_name/resource"
          cd $base_path/$release_name/resource
          npm install
          npm run build
          mv build ../public
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          release_name: ${{ needs.setup.outputs.release_name }}
      
      - name: Build application
        run: |
          echo "Building application for directory: $base_path/$release_name"
          cd $base_path/$release_name
          CGO_ENABLED=0 GOOS=linux go build -o bin/$release_name ./cmd/main.go
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          release_name: ${{ needs.setup.outputs.release_name }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build and push image
        run: |
          echo "Building image for directory: $base_path/$release_name"
          cd $base_path/$release_name
          docker build -t $username/$release_name:latest --no-cache -f ./iac/Dockerfile .
          docker push $username/$release_name:latest
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          release_name: ${{ needs.setup.outputs.release_name }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      
  deploy:
    needs: [setup, build]
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes
        run: |
          echo "Update repository for Helm"
          helm repo update
          echo "Deploying image for directory: $base_path/$release_name"
          cd $base_path/$release_name/iac/
          terraform init
          terraform apply -auto-approve
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          release_name: ${{ needs.setup.outputs.release_name }}
      