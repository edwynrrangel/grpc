name: Deploy Go

on:
  push:
    branches:
      - master
    paths:
      - "go/**"
  workflow_dispatch:
    inputs:
      directory_name:
        description: 'Enter the directory name under go/ to build and push'
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      base_path: ${{ steps.set_path.outputs.base_path }}
      project_name: ${{ steps.set_project_name.outputs.project_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set path
        id: set_path
        run: |
          echo "::set-output name=base_path::go"

      - name: Set Project Name
        id: set_project_name
        run: |
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            project_name=$(git diff --name-only HEAD^ HEAD | grep '^go/' | cut -d '/' -f 2 | uniq)
          else
            project_name="${{ github.event.inputs.directory_name }}"
          fi
          echo "::set-output name=project_name::$project_name"

  build:
    needs: setup
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build and push image
        run: |
          echo "Building image for directory: $base_path/$project_name"
          cd $base_path/$project_name
          docker build -t $username/$project_name:latest --no-cache -f ./k8s/Dockerfile .
          docker push $username/$project_name:latest
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          project_name: ${{ needs.setup.outputs.project_name }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      
  deploy:
    needs: [setup, build]
    runs-on: self-hosted
    steps:
      - name: Deploy to Kubernetes
        run: |
          echo "Deploying image for directory: $base_path/$project_name"
          helm install $helm_chart --namespace helm_namespace --create-namespace --debug --name-template $project_name -f ./$base_path/$project_name/k8s/values.yaml
        env:
          base_path: ${{ needs.setup.outputs.base_path }}
          project_name: ${{ needs.setup.outputs.project_name }}
          helm_chart: ${{ secrets.HELM_CHART }}
          helm_namespace: ${{ secrets.HELM_NAMESPACE }}

      