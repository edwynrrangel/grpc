# This file contains default values to be used during the Helm chart installation.
# Values can be overridden by providing a custom values.yaml file during installation.

# Pre-installation configuration for the banking-service Helm chart.
preInstallCheck:
  # Flag to enable or disable the pre-installation check.
  enabled: false
  # Name of the PVC to check for existence.
  pvcName: banking-service-nginx-pvc
  # Namespace where the PVC is expected to exist.
  namespace: banking-service

# Global configuration that affects all components of the chart.
global:
  # Flag to enable or disable the chart globally.
  enabled: true
  # fullnameOverride allows you to override the full resource names.
  # fullnameOverride: "banking-service-nginx"
  # The name of the project, used in various naming conventions.
  projectName: nginx
  # The name of the Kubernetes cluster where this will be deployed.
  clusterName: banking-service
  # Image configuration for the primary container used in the application.
  image:
    repository: nginx
    tag: "latest"
    pullPolicy: Always
  # Default Kubernetes namespace to be used, if not overridden during deployment.
  namespace: banking-service

# Application-specific configuration.
app:
  # Number of replicas for the application.
  replicaCount: 1

  # Service Account configuration.
  serviceAccount:
    # Whether to enable a Kubernetes service account.
    enabled: false
    # The name of the service account. Leave as default or specify a custom name.
    name: banking-service-nginx
    # Annotations to add to the service account, can be used for IAM roles, etc.
    annotations: {}
    # Automatically mount the service account token in the pod.
    automount: true

  # Environment variables for the application.
  env:
    - name: ENV
      value: "dev"

  # Secrets configuration. Reference existing Kubernetes secrets.
  secrets:
    - secretKey: SECRET
      secretName: banking-service-nginx

  # Resource requests and limits for the application pod.
  resources:
    requests:
      memory: "256Mi"
      cpu: "75m"
    limits:
      memory: "512Mi"
      cpu: "100m"

  # Service configuration for exposing the application.
  service:
    # Type of service: ClusterIP, NodePort, or LoadBalancer.
    type: LoadBalancer
    # Ports configuration for the service.
    ports:
      - name: http
        port: 80
        targetPort: 80
        protocol: TCP
      - name: https
        port: 443
        targetPort: 443
        protocol: TCP

  # Liveness probe configuration to check the health of the application.
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 15
    periodSeconds: 20

  # Readiness probe configuration to check if the application is ready to serve traffic.
  readinessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 5
    periodSeconds: 20

  # Horizontal Pod Autoscaler configuration to automatically scale the application.
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 70

  # Security context for the pod to specify security settings.
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

  # ConfigMap configuration for the application.
  configMap:
    enabled: false
    # Data to be stored in the ConfigMap.
    data:
      app.properties: |
        key1: value1
        key2: value2

  # Volumes definition for pod volume mounts.
  volumes:
    - name: banking-service-nginx-pvc
      persistentVolumeClaim:
        claimName: banking-service-nginx-pvc
    - name: banking-service-nginx-config
      configMap:
        name: banking-service-nginx-config

  # Volume mounts for the application into the container.
  volumeMounts:
    - name: banking-service-nginx-pvc
      mountPath: /var/www/html
    - name: banking-service-nginx-config
      mountPath: /etc/config
      readOnly: true

